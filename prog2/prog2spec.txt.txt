1. The spec.

You will use Prolog to write an airline reservation system for the Twilight Zone Airlines. Given a request to travel from one city to another, print out the flight schedule. For each leg of the trip, print out the departure airport, airport, city name, and time. For example:

| ?- fly( lax, sea).
depart  LAX  Los Angeles     14:22
arrive  SFO  San Francisco   15:29
depart  SFO  San Francisco   16:02
arrive  SEA  Seattle-Tacoma  17:42
true ?
yes
A database has been provided which lists some airports, their cities, and the North latitudes and West longitudes of the airports.  A flight schedule has also been provided listing the departure and arrival airports and the departure times.

Your program should include a "main" rule that when posed as a query will read two atoms from the standard input and use those as the source and destination airports using the airport codes. The following shows how we should be able to compile and run your program on the unix server. In the following the output is totally faked, just to show the format of input and output. This is the result of running the example prog2.pl uploaded to Files/prog2. The user input is the part typed after the "|:" prompts.

unix3.lt.ucsc.edu115 :swipl --goal=main -c prog2.pl
unix3.lt.ucsc.edu116 :a.out
|: nyc.
|: lax.
depart  NYC  New York City  09:03
arrive  LAX  Los Angeles    14:22
2. Logic

Some notes about the logic of the program.

(a) To compute the distance between airports, use the haversine formula. The database contains degrees and minutes, which must be converted to radians. The result must be converted to miles.

(b) Planes fly at a constant speed of 500 miles per hour and always using great circle paths, so the arrival time can be computed from the departure time.

(c) A flight transfer always takes 30 minutes, so during a transfer at a hub, the departure of a connecting flight must be at least 30 minutes later than the arrival of the incoming flight.

(d) There are no overnight trips. The complete trip departs and arrives in the same day, although the final arrival time may be shown as greater than 23:59.

3. What to Submit

Submit one file: prog2.pl, runnable as described above.

Slight modification of an assignment developed by Wesley Mackey.

